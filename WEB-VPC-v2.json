{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "WEB-VPC Cloudformation",
    "Parameters": {
        "AmazonLinuxAMIID": {
            "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
            "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
        },
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
        }
    },
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "10.0.0.0/16",
                "EnableDnsSupport": true,
                "EnableDnsHostnames": true,
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "WEB-VPC"
                    }
                ]
            }
        },
        "IGW": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "WEB-IGW"
                    }
                ]
            }
        },
        "VPCtoIGWConnection": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "IGW"
                },
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "PublicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Public-WEB"
                    }
                ]
            }
        },
        "PublicRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": [
                "VPCtoIGWConnection"
            ],
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "IGW"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                }
            }
        },
        "PublicSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "MapPublicIpOnLaunch": true,
                "CidrBlock": "10.0.1.0/24",
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::GetAZs": {
                                "Ref": "AWS::Region"
                            }
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "WEB Public-sub-A"
                    }
                ]
            }
        },
        "PublicSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "MapPublicIpOnLaunch": true,
                "CidrBlock": "10.0.2.0/24",
                "AvailabilityZone": {
                    "Fn::Select": [
                        2,
                        {
                            "Fn::GetAZs": {
                                "Ref": "AWS::Region"
                            }
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "WEB Public-sub-C"
                    }
                ]
            }
        },
        "PublicRouteTableAssociation1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                }
            }
        },
        "PublicRouteTableAssociation2": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "SubnetId": {
                    "Ref": "PublicSubnet2"
                }
            }
        },
        "PrivateRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Private-WEB"
                    }
                ]
            }
        },
        "PrivateSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": "10.0.10.0/24",
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::GetAZs": {
                                "Ref": "AWS::Region"
                            }
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "WEB Private-sub-A1"
                    }
                ]
            }
        },
        "PrivateSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": "10.0.30.0/24",
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::GetAZs": {
                                "Ref": "AWS::Region"
                            }
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "WEB Private-sub-A2"
                    }
                ]
            }
        },
        "PrivateSubnet3": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": "10.0.20.0/24",
                "AvailabilityZone": {
                    "Fn::Select": [
                        2,
                        {
                            "Fn::GetAZs": {
                                "Ref": "AWS::Region"
                            }
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "WEB Private-sub-C1"
                    }
                ]
            }
        },
        "PrivateSubnet4": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": "10.0.40.0/24",
                "AvailabilityZone": {
                    "Fn::Select": [
                        2,
                        {
                            "Fn::GetAZs": {
                                "Ref": "AWS::Region"
                            }
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "WEB Private-sub-C2"
                    }
                ]
            }
        },
        "PrivateRouteTableAssociation1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                },
                "SubnetId": {
                    "Ref": "PrivateSubnet1"
                }
            }
        },
        "PrivateRouteTableAssociation2": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                },
                "SubnetId": {
                    "Ref": "PrivateSubnet2"
                }
            }
        },
        "PrivateRouteTableAssociation3": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                },
                "SubnetId": {
                    "Ref": "PrivateSubnet3"
                }
            }
        },
        "PrivateRouteTableAssociation4": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                },
                "SubnetId": {
                    "Ref": "PrivateSubnet4"
                }
            }
        },
        "RootInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    "EC2Role"
                ]
            }
        },
        "CommandHostSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "DependsOn": "VPCtoIGWConnection",
            "Properties": {
                "GroupDescription": "Security Group for Command Host",
                "GroupName": "WEB Bastion-SG",
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "WEB Bastion-SG"
                    }
                ],
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 22,
                        "ToPort": 22,
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 80,
                        "ToPort": 80,
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "icmp",
                        "FromPort": -1,
                        "ToPort": -1,
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },    
        "CommandHost1": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": [
                "RootInstanceProfile",
                "PublicSubnet1",
                "CommandHostSecurityGroup",
                "VPCtoIGWConnection"
            ],
            "Properties": {
                "KeyName": {
                    "Ref": "KeyName"
                },
                "IamInstanceProfile": {
                    "Ref": "RootInstanceProfile"
                },
                "ImageId": {
                    "Ref": "AmazonLinuxAMIID"
                },
                "InstanceType": "t2.micro",
                "NetworkInterfaces": [
                    {
                        "DeviceIndex": "0",
                        "AssociatePublicIpAddress": true,
                        "SubnetId": {
                            "Ref": "PublicSubnet1"
                        },
                        "GroupSet": [
                            {
                                "Ref": "CommandHostSecurityGroup"
                            }
                        ]
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "WEB Bastion-A"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "\n",
                            [
                                "#!/bin/bash",
                                "# Turn on password authentication for lab challenge",
                                "echo 'P@ssw0rd' | passwd ec2-user --stdin",
                                "sed -i 's|[#]*PasswordAuthentication no|PasswordAuthentication yes|g' /etc/ssh/sshd_config",
                                "systemctl restart sshd.service"
                            ]
                        ]
                    }
                }
            }
        },
        "CommandHost2": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": [
                "RootInstanceProfile",
                "PublicSubnet2",
                "CommandHostSecurityGroup",
                "VPCtoIGWConnection"
            ],
            "Properties": {
                "KeyName": {
                    "Ref": "KeyName"
                },
                "IamInstanceProfile": {
                    "Ref": "RootInstanceProfile"
                },
                "ImageId": {
                    "Ref": "AmazonLinuxAMIID"
                },
                "InstanceType": "t2.micro",
                "NetworkInterfaces": [
                    {
                        "DeviceIndex": "0",
                        "AssociatePublicIpAddress": true,
                        "SubnetId": {
                            "Ref": "PublicSubnet2"
                        },
                        "GroupSet": [
                            {
                                "Ref": "CommandHostSecurityGroup"
                            }
                        ]
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "WEB Bastion-C"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "\n",
                            [
                                "#!/bin/bash",
                                "# Turn on password authentication for lab challenge",
                                "echo 'P@ssw0rd' | passwd ec2-user --stdin",
                                "sed -i 's|[#]*PasswordAuthentication no|PasswordAuthentication yes|g' /etc/ssh/sshd_config",
                                "systemctl restart sshd.service"
                            ]
                        ]
                    }
                }
            }
        },
        "WEBSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Security Group for WEB Server",
                "GroupName": "WEB-SG",
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "WEB-SG"
                    }
                ],
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 22,
                        "ToPort": 22,
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 80,
                        "ToPort": 80,
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "icmp",
                        "FromPort": -1,
                        "ToPort": -1,
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "WebServer1": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": [
                "RootInstanceProfile",
                "PrivateSubnet1",
                "WEBSecurityGroup"
            ],
            "Properties": {
                "KeyName": {
                    "Ref": "KeyName"
                },
                "IamInstanceProfile": {
                    "Ref": "RootInstanceProfile"
                },
                "ImageId": {
                    "Ref": "AmazonLinuxAMIID"
                },
                "InstanceType": "t2.micro",
                "NetworkInterfaces": [
                    {
                        "DeviceIndex": "0",
                        "AssociatePublicIpAddress": false,
                        "SubnetId": {
                            "Ref": "PrivateSubnet1"
                        },
                        "GroupSet": [
                            {
                                "Ref": "WEBSecurityGroup"
                            }
                        ]
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "WEB-A"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "\n",
                            [
                                "#!/bin/bash",
                                "# Install Apache Web Server and PHP",
                                "yum install -y httpd mysql mariadb php",
                                "# Download Lab files",
                                "wget https://github.com/kggameaws/KgGame/raw/master/html.zip",
                                "unzip html.zip -d /var/www/html/",
                                "# Turn on web server",
                                "chkconfig httpd on",
                                "service httpd start"
                            ]
                        ]
                    }
                }
            }
        },    
        "WebServer2": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": [
                "RootInstanceProfile",
                "PrivateSubnet3",
                "WEBSecurityGroup"
            ],
            "Properties": {
                "KeyName": {
                    "Ref": "KeyName"
                },
                "IamInstanceProfile": {
                    "Ref": "RootInstanceProfile"
                },
                "ImageId": {
                    "Ref": "AmazonLinuxAMIID"
                },
                "InstanceType": "t2.micro",
                "NetworkInterfaces": [
                    {
                        "DeviceIndex": "0",
                        "AssociatePublicIpAddress": false,
                        "SubnetId": {
                            "Ref": "PrivateSubnet3"
                        },
                        "GroupSet": [
                            {
                                "Ref": "WEBSecurityGroup"
                            }
                        ]
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "WEB-C"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "\n",
                            [
                                "#!/bin/bash",
                                "# Install Apache Web Server and PHP",
                                "yum install -y httpd mysql mariadb php",
                                "# Download Lab files",
                                "wget https://github.com/kggameaws/KgGame/raw/master/html.zip",
                                "unzip html.zip -d /var/www/html/",
                                "# Turn on web server",
                                "chkconfig httpd on",
                                "service httpd start"
                            ]
                        ]
                    }
                }
            }
        },
        "NATGateway": {
            "DependsOn": "PrivateSubnet1",
            "Type": "AWS::EC2::NatGateway",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                },
                "AllocationId": {
                    "Fn::GetAtt": [
                        "NATGatewayEIP",
                        "AllocationId"
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "WEB-NAT"
                    }
                ]
            }
        },
        "NATGatewayEIP": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "NATGatewayRoute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "NATGateway"
                }
            }
        },
        "DBSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "DependsOn": "VPCtoIGWConnection",
            "Properties": {
                "GroupDescription": "Security Group for Database",
                "GroupName": "WEB-DB-SG",
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "WEB-DB-SG"
                    }
                ],
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 22,
                        "ToPort": 22,
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 80,
                        "ToPort": 80,
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 3306,
                        "ToPort": 3306,
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        }
   }
}
    